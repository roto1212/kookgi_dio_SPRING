<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- beans 태그 내부에서 bean 태그를 이용해서 클래스의 객체(bean)  -->	
	<!-- id 속성에는 생성할 bean의 이름을 적어준다.  -->
	<!-- class 속성에는 bean을 생성할 클래스 이름을 반드시 풀 패키지 이름과 함께 적어준다. -->

	<!-- MyCalcurator mycalc = new MyCalcurator() 와 같은 기능이 실행된다. -->
	<bean id="mycalc" class="com.koreait.springDI_xml_setter.MyCalcurator">
		
		<!-- 생성된 bean의 멤버를 초기화하려면 <bean> ~ </bean> 사이에서 하면된다. -->
		
		<!-- setter나 생성자를 이용해서 생성된 bean의 멤버를 초기화 시킬 수 있다. -->
		<!-- property태그를 이용해 setter를 메소드를 실행하고 멤버변수 초기화 시키기 -->
		<!-- name속성에는 setter를 실행할 멤버의 이름을 적어준다. -->
		
	<!-- 멤버 초기화 => 변수 => value사용 -->
		
		<!-- 멤버변수 초기화 방법 1: value 속성에 초기화시킬 데이터를 적는다. -->
		<!-- <property name="firstNum" value="8"></property> -->	<!-- mycalc.setFirstNum(8);와 같은 기능 -->
		<!-- property 태그 내부에서 아무런 일도 하지 않기 떄문에 아래와 같이 코딩하면 </property>를 생략할수 있다. -->
		<property name="firstNum" value="8"/>	<!-- mycalc.setFirstNum(8);와 같은 기능 -->
	
		<!-- 멤버변수 초기화 방법 2: property 태그 내부에 value 태그를 사용해 초기화 시킬 데이터를 적는다.-->
		<property name="secondNum"> <!-- mycalc.setSecondNum(5);와 같은 기능 -->
			<value>5</value>
		</property>
		
		<!-- 멤버 초기화 => 객체 => ref(다른 bean 참조) 사용 -->
		<!-- mycalc.setCalcu(calc);와 같은 스프링 기능 -->
		<!-- <property name="calcu" ref="calc"/> --> <!-- ref속성 사용 -->
		<property name="calcu">
			<ref bean="calcu"/>	<!-- ref태그 사용 -->
		</property>
	</bean>
		
	<!-- Calcurator calc = new Calcurator();와 같은 spring기능 -->
	<bean id="calcu" class="com.koreait.springDI_xml_setter.Calcurator"/>	
	
	
</beans>
